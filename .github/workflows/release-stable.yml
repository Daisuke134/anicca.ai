name: Release Stable (macOS)

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      CSC_LINK: ${{ secrets.CSC_LINK }}
      CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install deps (include dev)
        run: npm ci --include=dev
      
      - name: Validate proxy secrets (stable)
        run: |
          test -n "${{ secrets.PROXY_URL_PRODUCTION }}" || (echo "Missing PROXY_URL_PRODUCTION" && exit 1)
          test -n "${{ secrets.PROXY_URL_STAGING }}"    || (echo "Missing PROXY_URL_STAGING" && exit 1)

      - name: Build and Publish (stable)
        run: |
          npm run build:voice
          # Pre-embed proxy URLs into package.json (no repo change)
          node -e "const fs=require('fs'); const p=JSON.parse(fs.readFileSync('package.json')); p.appConfig=p.appConfig||{}; p.appConfig.proxy={ production: process.env.PROXY_URL_PRODUCTION, staging: process.env.PROXY_URL_STAGING }; fs.writeFileSync('package.json', JSON.stringify(p,null,2));"
          NODE_ENV=production \
          PROXY_URL_PRODUCTION="${{ secrets.PROXY_URL_PRODUCTION }}" \
          PROXY_URL_STAGING="${{ secrets.PROXY_URL_STAGING }}" \
          npx electron-builder --mac --config electron-builder-voice.yml --publish always \
            -c.publish.releaseType=release \
            -c.publish.channel=latest \
            -c.extraMetadata.appConfig.proxy.production=$PROXY_URL_PRODUCTION \
            -c.extraMetadata.appConfig.proxy.staging=$PROXY_URL_STAGING
