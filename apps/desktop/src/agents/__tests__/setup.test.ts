import { describe, it, expect, beforeAll } from 'vitest';

describe('„ÉÜ„Çπ„ÉàÁí∞Â¢É„Çª„ÉÉ„Éà„Ç¢„ÉÉ„ÉóÁ¢∫Ë™ç', () => {
  beforeAll(() => {
    console.log('üß™ VitestÁí∞Â¢É„Åß„ÉÜ„Çπ„Éà„ÇíÈñãÂßã„Åó„Åæ„Åô');
  });

  it('Vitest„ÅåÊ≠£Â∏∏„Å´Âãï‰Ωú„Åó„Å¶„ÅÑ„Çã', () => {
    expect(true).toBe(true);
  });

  it('TypeScript„ÅÆÂûã„ÉÅ„Çß„ÉÉ„ÇØ„ÅåÂãï‰Ωú„Åó„Å¶„ÅÑ„Çã', () => {
    const testValue: number = 42;
    expect(typeof testValue).toBe('number');
    expect(testValue).toBe(42);
  });

  it('ÈùûÂêåÊúü„ÉÜ„Çπ„Éà„ÅåÂãï‰Ωú„Åó„Å¶„ÅÑ„Çã', async () => {
    const promise = new Promise<string>((resolve) => {
      setTimeout(() => resolve('success'), 100);
    });
    
    const result = await promise;
    expect(result).toBe('success');
  });

  it('OpenAI Agents SDK„Åå„Ç§„É≥„Éù„Éº„Éà„Åß„Åç„Çã', async () => {
    try {
      const { RealtimeAgent } = await import('@openai/agents/realtime');
      expect(RealtimeAgent).toBeDefined();
      expect(typeof RealtimeAgent).toBe('function');
    } catch (error) {
      console.log('OpenAI SDK „Ç§„É≥„Éù„Éº„Éà„Ç®„É©„Éº:', error);
      throw error;
    }
  });

  it('„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ„ÉÑ„Éº„É´„É¢„Ç∏„É•„Éº„É´„Åå„Ç§„É≥„Éù„Éº„Éà„Åß„Åç„Çã', async () => {
    try {
      const { allTools } = await import('../tools');
      expect(allTools).toBeDefined();
      expect(Array.isArray(allTools)).toBe(true);
      expect(allTools.length).toBeGreaterThan(0);
      
      console.log(`‚úÖ ${allTools.length}ÂÄã„ÅÆ„ÉÑ„Éº„É´„ÅåÁôªÈå≤„Åï„Çå„Å¶„ÅÑ„Åæ„Åô`);
      allTools.forEach((tool, index) => {
        console.log(`  ${index + 1}. ${tool.name}`);
      });
    } catch (error) {
      console.log('„ÉÑ„Éº„É´„É¢„Ç∏„É•„Éº„É´ „Ç§„É≥„Éù„Éº„Éà„Ç®„É©„Éº:', error);
      throw error;
    }
  });
});